extends ../layout

block content
    style.
        .editLink  {
            display: inline-block;
        }

block content
    style.
        .dropdown {
            text-align: center;
        }

        .button, .dropdown-menu {
            margin: 10px auto
        }

        .dropdown-menu {
            width: 200px;
            left: 50%;
            margin-left: -100px;
        }

        input[type=checkbox] {
            /* Double-sized Checkboxes */
            -ms-transform: scale(2); /* IE */
            -moz-transform: scale(2); /* FF */
            -webkit-transform: scale(2); /* Safari and Chrome */
            -o-transform: scale(2); /* Opera */
            padding: 10px;
        }

        .pewtube-pro {
            background: #edeeee;
            font-weight: 400;
            font-size: 13px;
            margin-left: 3px;
            padding: 8px 9px;
            display: inline-block;
            border-radius: 3px;
            transform: translateY(-2px);
        }

    div.row 
        div.col-md-2
            div.my-5
                if channel.customThumbnail
                    img(src=`${uploadServer}/${channel.channelUrl}/${channel.customThumbnail}` width="120px" height="120px" class="img-circle center-block")
                else
                    img(src=`/images/default-user-icon.jpg` width="120px" height="120px" class="img-circle center-block")
                                        
                h3.text-center #{channel.channelName || channel.channelUrl}
                if channel.verified == true
                    img(src="/images/verified.jpg" width="25px" height="25px" style="margin-left:3px;margin-top:-2px;margin-right:5px;")
                if channel.plan == 'plus'
                    span.pewtube-pro PLUS

                if user.channelUrl != channel.channelUrl
                    if alreadySubbed
                        button.subscribe.btn.btn-danger.center-block(style="border-radius:4px; margin-top: 20px;") Unsubscribe 
                    else
                        button.subscribe.btn.btn-lg.btn-success(style="border-radius:4px; margin-top: 20px;") Subscribe
                    
                div.btn-group.text-center(role="group" aria-label="delete-controls" style="margin-left: 7%; margin-right: auto; margin-bottom: 20px;")
                    if user && ( user.role == 'admin' || user.role == 'moderator') && channel.status !== 'restricted'
                        button.delete-account.btn.btn-danger Delete Account
                        //button.delete-account.btn.btn-danger Delete Account And Ban Ip
                        if user.role == 'admin'
                            button.delete-ips.btn.btn-danger Ban IP Address

                    if user && ( user.role == 'admin' || user.role == 'moderator') && channel.status == 'restricted'
                        br
                        h3 ACCOUNT DELETED
                        button.undelete-account.btn.btn-warning Undelete Account
                        //button.undelete-account.btn.btn-warning Undelete Account And Unban Ip
                        if user.role == 'admin'
                            button.delete-ips.btn.btn-warning Undelete All Accounts / Unban All Ips

            if user.channelUrl == channel.channelUrl
                div
                    ul.list-group
                        li.list-group-item
                            a.nav-link.active(href="/upload") Upload
                        li.list-group-item
                            a.nav-link.active(href="/notifications") Notifications
                              span.badge.badge-primary (#{unreadNotifAmount})
                        li.list-group-item
                            a.nav-link.active(href="/account") Account
            div.card
                div.card-body 
                    h4.card-title Channel Description
                    div.card-text #{channel.channelDescription}
            if user && user.role == 'admin'
                div.card(style="margin-top: 10px;")
                    div.card-body 
                        h4.card-title Last Login IP:
                        div.card-text 
                                each ip in ips
                                    p= ip
                      
        div.col-md-10       
            div.row
                div.col-sm-3
                    div.card(style="margin-left: 20px; margin-right: 20px;")
                        div.card-body.text-center
                            i.fas.fa-file-upload
                            div.card-title
                                h2 #{userUploadAmount}
                                p uploads
                div.col-sm-3
                    div.card(style="margin-left: 20px; margin-right: 20px;")
                        div.card-body.text-center
                            i.fas.fa-file-upload
                            div.card-title
                                h2 #{channel.totalViews}
                                p views
                if channel.receivedSubscriptions
                    div.col-sm-3
                        div.card(style="margin-left: 20px; margin-right: 20px;")
                            div.card-body.text-center
                                i.fas.fa-file-upload
                                div.card-title
                                    h2 #{channel.receivedSubscriptions.length}
                                    p subscribers
                else
                    div.col-sm-3
                        div.card(style="margin-left: 20px; margin-right: 20px;")
                            div.card-body.text-center
                                i.fas.fa-file-upload
                                div.card-title
                                    h2 0
                                    p subscribers
            hr

            div.float-left(style="margin-bottom: 10px")
                div.dropdown(style="display:inline;margin-right:15px;")
                    button.btn.btn-primary.dropdown-toggle(type='button', data-toggle='dropdown' style="border-radius:5px")
                        | #{orderByEnglishString} 
                        span.caret

                    ul.dropdown-menu.dropdown
                        li
                            a(href=`/user/${channel.channelUrl}?orderBy=popular`) Popular
                        li
                            a(href=`/user/${channel.channelUrl}?orderBy=newToOld`) New To Old
                        li
                            a(href=`/user/${channel.channelUrl}?orderBy=oldToNew`) Old To New
                        li
                            a(href=`/user/${channel.channelUrl}?orderBy=alphabetical`) Alphabetical

            each upload in channel.uploads
                div.col-sm-3(style="text-align:center;height:360px")
                    if isUser || isAdmin || ( user && user.role == 'moderator' )
                        div.editFileButtons
                            form.editLink(action="/api/upload/delete" method="POST" style="display:inline-block")
                                input(type='hidden', name='_csrf', value=_csrf)
                                input(type='hidden', name='videoId', value=upload.uniqueTag)
                                button.btn.btn-danger.delete-media Delete
                            if isUser || isAdmin || user.role == 'moderator'
                                a.editLink(href=`/user/${channel.channelUrl}/${upload.uniqueTag}/edit` style="display:inline-block")
                                    button.btn.btn-primary Edit

                    include ../viewPartials/uploadDetails

        include ../viewPartials/channelOverviewPagination

            include ../viewPartials/adminSensitivityButtons

            include ../viewPartials/changeSensitivityFilterJs

            if user
                script.
                  var user = '#{user.channelUrl}'
            else
                script.
                  var user = undefined

            script.
              var amountOfSubs = #{subscriberAmount}
              var alreadySubbed = #{alreadySubbed}

              $('.subscribe').on('touchstart click', function (e) {

                if (!user) {
                  return swal('Please register an account to subscribe')
                }

                var channelUrl = '#{channel.channelUrl}'
                var csrf = '#{_csrf}'

                // dont move browser
                e.preventDefault();

                if (alreadySubbed) {
                  amountOfSubs = amountOfSubs - 1
                  alreadySubbed = false;
                } else {
                  amountOfSubs = amountOfSubs + 1
                  alreadySubbed = true;
                }

                var userName = "#{channel.channelName || channel.channelUrl}"

                if (!alreadySubbed) {
                  $('.subscribe').html(`Subscribe (${amountOfSubs})`)
                  swal('You have unsubscribed from ' + userName)

                } else {
                  $('.subscribe').html(`Subscribed (${amountOfSubs})`)
                  swal('You have subscribed to ' + userName )
                }

                //
                var data = {
                  _csrf: csrf,
                  channelUrl
                }

                $.ajax({
                  type: 'POST',
                  url: `/api/subscribe`,
                  data,
                  success: function (data) {
                    console.log(data);
                  },
                  error: function (err) {
                    console.log(err);
                  }
                });
              })

            script.
              var myTextEl = document.getElementById('descriptionText');
              myTextEl.innerHTML = Autolinker.link(myTextEl.innerHTML);




            script.
              $('.delete-media').on('click', function (e) {
                e.preventDefault();
                var form = $(this).parents('form');

                swal({
                  title: "WARNING",
                  text: "Are you sure you want to delete this upload?",
                  type: "warning",
                  showCancelButton: true,
                  confirmButtonColor: "#DD6B55",
                  confirmButtonText: "Yes, delete it"
                }).then(function (result) {
                  if (result.value == true) {
                    form.submit();
                  }
                  console.log(result);
                })
              });

            if user && ( user.role == 'admin' || user.role == 'moderator' )
                script.
                    $('.delete-account').on('click', function (e) {
                        e.preventDefault();
                        swal({
                            title: "WARNING",
                            text: "Are you sure you want to delete this account?",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#DD6B55",
                            confirmButtonText: "Yes, delete it"
                        }).then(function (result) {
                              if(result.value !== true){
                                return
                              }

                              var channelUrl = '#{channel.channelUrl}';
                              var csrf = '#{_csrf}';
                                // sweetalert2.js:131 SweetAlert2: Unknown parameter "closeOnConfirm"
                              // dont move browser
                              e.preventDefault();

                              //
                              var data = {
                                _csrf: csrf,
                                channelUrl
                              }

                              console.log(data);

                              $.ajax({
                                type: 'POST',
                                url: `/admin/deleteAccount`,
                                data,
                                success: function (data) {

                                  console.log(data);

                                  location.reload();

                                },
                                error: function (err) {
                                  console.log(err);
                                }
                              });
                        });
                    });

            if user && ( user.role == 'admin' || user.role == 'moderator' )
                script.
                  $('.undelete-account').on('click', function (e) {
                    e.preventDefault();
                    swal({
                      title: "WARNING",
                      text: "Are you sure you want to undelete this account?",
                      type: "warning",
                      showCancelButton: true,
                      confirmButtonColor: "#DD6B55",
                      confirmButtonText: "Yes, delete it"
                    }).then(function (result) {
                      if (result.value !== true) {
                        return
                      }

                      var channelUrl = '#{channel.channelUrl}';
                      var csrf = '#{_csrf}';
                      // sweetalert2.js:131 SweetAlert2: Unknown parameter "closeOnConfirm"
                      // dont move browser
                      e.preventDefault();

                      //
                      var data = {
                        _csrf: csrf,
                        channelUrl
                      }

                      $.ajax({
                        type: 'POST',
                        url: `/admin/undeleteAccount`,
                        data,
                        success: function (data) {

                          console.log(data);

                          location.reload();

                        },
                        error: function (err) {
                          console.log(err);
                        }
                      });
                    });
                  });

            if user && user.role == 'admin'
                script.
                  $('.delete-ips').on('click', function (e) {
                    e.preventDefault();

                    $.ajax({
                      type: 'POST',
                      url: `/admin/getUserAccounts`,
                      data : {
                        _csrf: '#{_csrf}',
                        channelUrl: '#{channel.channelUrl}'
                      },
                      success: function (data) {

                        // console.log(data);

                        var string = '';
                        for(var channelUrl of data.channelUrls){
                          string = string + ' ' + channelUrl;
                        }

                        var siteVisitorAmount = data.ids.length;

                        swal({
                          title: "WARNING",
                          text: "Are you sure you want to delete this account?" + string + '. ' + siteVisitorAmount + ' site visitors',
                          type: "warning",
                          showCancelButton: true,
                          confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it"
                        }).then(function (result) {
                          if (result.value !== true) {
                            return
                          }

                          var channelUrl = '#{channel.channelUrl}'
                          var csrf = '#{_csrf}'
                          // sweetalert2.js:131 SweetAlert2: Unknown parameter "closeOnConfirm"
                          // dont move browser
                          e.preventDefault();

                          //
                          var data = {
                            _csrf: csrf,
                            channelUrl
                          }

                          console.log(data);

                          $.ajax({
                            type: 'POST',
                            url: `/admin/deleteAllUsersAndBlockIps`,
                            data,
                            success: function (data) {

                              console.log(data);

                              location.reload();

                            },
                            error: function (err) {
                              console.log(err);
                            }
                          });
                        });

                        console.log(data);

                      },
                      error: function (err) {
                        console.log(err);
                      }
                    });


                  });

        block extra_js
          script(src="https://cdnjs.cloudflare.com/ajax/libs/autolinker/1.4.4/Autolinker.js")

